{"version":3,"sources":["Header.js","Results.js","Snippet.js","Category.js","Container.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","detectReset","e","results","target","className","includes","reset","clear","clearAll","state","_this$props","incorrect","correct","check","checkProgess","react_default","a","createElement","disabled","onClick","Component","Results","answer","rel","href","prompt","mdn","solution","close","Snippet","checkAnswer","preventDefault","anw","value","keepScore","setState","question","_this2","displayResults","card","onSubmit","snippet","autoComplete","placeholder","id","ref","type","Categories","componentDidUpdate","questions","resetCheck","resetToggle","getQuestion","prompts","splice","Math","floor","random","length","currentQuestion","display","displayToggle","_this$state","buttonDisable","title","Snippet_Snippet","Container","key","newScore","push","defineProperty","localStorage","setItem","JSON","stringify","clearIncorrect","clearCorrect","displayCategories","cats","keys","map","Category_Categories","concat","cards","reduce","acc","val","category","split","Header_Header","filterByCat","App","componentDidMount","fetch","then","response","json","dkData","catch","error","Error","roundReset","setToggle","filterStorage","score","filter","every","elem","uid","parse","getItem","checkStorage","Container_Container","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efd39861.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Header extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {}\n\t}\n\tdetectReset = (e) => {\n\t\tconst results = e.target.className.includes('round') ? false : true;\n\t\tthis.props.reset(results);\n\t\tthis.props.clear();\n\t\tif (results) this.props.clearAll()\n\t}\n\trender() {\n\t\tlet {incorrect, correct, check} = this.props\n\t\tlet checkProgess = correct + incorrect\n\t\treturn (\n\t\t\t<nav>\n\t\t\t\t<button disabled={check} onClick={this.detectReset} className='round header-button'>Do Better</button>\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Methods of MADNESS</h2>\n\t\t\t\t\t<div className='score-board'>\n\t\t\t\t\t<p>Correct: {correct}</p> <p>Incorrect: {incorrect}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button disabled={checkProgess === 0} onClick={this.detectReset} className='all header-button'>Reset All</button>\n\t\t\t</nav>\n\t\t);\n\t}\n}","import React from 'react';\n\nexport default function Results (props) {\n\t\tconst results = props.answer ? 'CORRECT!' : 'JUST DO BETTER NEXT TIME!';\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<h3>{results}</h3>\n\t\t\t\t<p>Here is a link to the <a target='_blank' rel=\"noopener noreferrer\" href={props.prompt.mdn}>MDN</a> on</p> <p className='method-name'>'{props.prompt.solution}'</p>\n\t\t\t\t<button className='continue' onClick={props.close}>Continue</button>\n\t\t\t</section>\n\t\t);\n\t}\n","import React, { Component } from 'react';\nimport Results from './Results'\n\nexport default class Snippet extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tprompt: this.props.question,\n\t\t\tresults: false,\n\t\t\tanswer: false,\n\t\t\tclose: this.props.close\n\t\t}\n\t}\n\tcheckAnswer = (e) => {\n\t\te.preventDefault()\n\t\tconst val = this.anw.value\n\t\tlet answer = val === this.state.prompt.solution\n\t\tthis.props.keepScore(this.state.prompt, answer)\n\t\tthis.setState({answer: answer, results: true})\n\t}\n\trender() {\n\t\tlet displayResults = this.state.results ? <Results {...this.state} /> : <h3 className='instruction'>PRESS ENTER TO SUBMIT</h3>\n\t\tconst card = this.props.question\n\t\treturn (\n\t\t\t<section className='snippet'>\n\t\t\t\t<h3 className='instructions' >FILL IN THE METHOD</h3>\n\t\t\t\t<form onSubmit={this.checkAnswer}>\n\t\t\t\t\t<p>{card.snippet[0]}</p>\n\t\t\t\t\t<p>{card.snippet[1]}\n\t\t\t\t\t\t<input autoComplete=\"off\" placeholder='METHOD' id='answer' ref={anw => this.anw = anw} type='text' />{card.snippet[2]}</p>\n\t\t\t\t<p>{card.snippet[3]}</p>\n\t\t\t\t</form>\n\t\t\t\t<div className='results'>\n\t\t\t\t{displayResults}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport Snippet from './Snippet'\n\nexport default class Categories extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tquestions: [],\n\t\t\tdisplay: false,\n\t\t\tcurrentQuestion: {}\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tthis.setState({ questions: this.props.questions })\n\t}\n\tcomponentDidUpdate = () => {\n\t\tconst {questions, resetCheck} = this.props \n\t\tif (resetCheck){\n\t\t\tthis.setState({questions: questions}, () => {\n\t\t\t\tthis.props.resetToggle();\n\t\t\t})\n\t\t}\n\t}\n\tgetQuestion = () => {\n\t\tconst prompts = this.state.questions\n\t\tconst question = prompts.splice(Math.floor(Math.random() * prompts.length), 1)\n\t\tthis.setState({questions: prompts, currentQuestion: question[0], display: true})\n\t}\n\tdisplayToggle = () => {\n\t\tthis.setState({display: false})\n\t}\n\trender() {\n\t\tconst {display, questions} = this.state\n\t\tlet buttonDisable = display || questions.length === 0 ? true : false;\n\t\treturn (\n\t\t\t<div className='cat-container'>\n\t\t\t\t<button className='cat-button' disabled={buttonDisable} onClick={this.getQuestion}>{this.props.title}</button>\n\t\t\t\t{this.state.display && <Snippet question={this.state.currentQuestion} close={this.displayToggle} keepScore={this.props.keepScore}/>}\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport Header from './Header';\nimport Category from './Category';\n\nexport default class Container extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcorrect: [],\n\t\t\tincorrect: []\n\t\t}\n\t}\n\tfilterByCat(cards) {\n\t\tlet cats = cards.reduce((acc, val) => {\n\t\t\tlet key = val.category.split(' ')[0];\n\t\t\tif (!acc[key]) {\n\t\t\t\tacc[key] = [];\n\t\t\t}\n\t\t\tif (val.category.includes(key)) {\n\t\t\t\tacc[key].push(val);\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, {})\n\t\treturn this.displayCategories(cats)\n\t}\n\tkeepScore = (question, check) => {\n\t\tlet key = check ? 'correct' : 'incorrect';\n\t\tconst newScore = this.state[key];\n\t\tnewScore.push(question);\n\t\tthis.setState({ [key]: newScore }, () => {\n\t\t\tlocalStorage.setItem('correct', JSON.stringify(this.state.correct));\n\t\t})\n\t}\n\tclearIncorrect = () => {\n\t\tthis.setState({ incorrect: [] })\n\t}\n\tclearCorrect = () => {\n\t\tthis.setState({ correct: [] })\n\t}\n\tdisplayCategories = (cats) => {\n\t\tconst { resetCheck, resetToggle } = this.props\n\t\treturn Object.keys(cats).map(key => {\n\t\t\treturn <Category questions={cats[key]} key={key} keepScore={this.keepScore} title={`${key} Prototype Method`} resetCheck={resetCheck} resetToggle={resetToggle} />\n\t\t})\n\t}\n\trender() {\n\t\tlet check = this.state.incorrect.length ? false : true;\n\t\tlet { correct, incorrect } = this.state;\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<Header check={check} reset={this.props.reset} clear={this.clearIncorrect} correct={correct.length} incorrect={incorrect.length} clearAll={this.clearCorrect} />\n\t\t\t\t<h3 className='pick-cat instructions' >SELECT A CATEGORY</h3>\n\t\t\t\t<div className='cat-box'>\n\t\t\t\t\t{this.filterByCat(this.props.cards)}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport Container from './Container';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n      roundReset: false\n    }\n  }\n  componentDidMount = () => {\n    fetch('http://memoize-datasets.herokuapp.com/api/v1/dkData')\n      .then(response => response.json())\n      .then(questions => {\n        this.setState({\n          questions: questions.dkData\n        })\n      })\n      .catch(error => {\n        throw new Error(error)\n      })\n  }\n  reset = (check) => {\n    if (check) { localStorage.clear() }\n    this.setState({roundReset: true })\n  }\n  setToggle = () => {\n    this.setState({ roundReset: false })\n  }\n  checkStorage(prompts) {\n    let score = JSON.parse(localStorage.getItem('correct')) || [];\n    return score.length ? this.filterStorage(score, prompts) : prompts;\n  }\n  filterStorage = (score, prompts) => {\n    return prompts.filter(val => score.every(elem => elem.uid !== val.uid))\n  }\n  render() {\n    let questions = this.checkStorage(this.state.questions)\n    return (\n      <section>\n        <Container cards={questions} resetToggle={this.setToggle} resetCheck={this.state.roundReset} reset={this.reset} />\n      </section>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}